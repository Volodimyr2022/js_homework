// const LOGIN = 'ADMIN';
// const PASSWORD = '1q2w3e';

// const authorize = () => {
//     let userPassword;
//     let userLogin;
//     do {
//         userLogin = prompt('Логин') 
//             if (!userLogin) {
//                 alert('Введите логин');
//             continue
//             };
//             userPassword = prompt('Пароль') 
//             if (!userLogin) {
//                 alert('Введите пароль');
//             continue
//             };
//             if (userPassword !== PASSWORD || userLogin !== LOGIN) {
//                 alert('Данные не верны');
//             continue
//             };
//             break;
//     }while(true)
//     alert('Welcome!')
// }
// authorize()


// const LOGIN = 'ADMIN';
// const PASSWORD = '1q2w3e';

// const authorize = () => {
//     let userPassword;
//     let userLogin;
//     let isAuthSuccess = false;

//     do {
//         userLogin = prompt('Логин:');
//             if (!userLogin) {
//                     alert('Введите логин');
//                     continue;
//                 }
            
//         userPassword = prompt('Пароль:'); 
//             if (!userLogin) {
//                     alert('Введите пароль');
//                     continue;
//                 }
//             if (userLogin === LOGIN && userPassword === PASSWORD) {
//                 isAuthSuccess = true;
//                 } else {
//                     alert('Данные не верны')
//                 };      
//         } while(!isAuthSuccess); 
//     alert('Welcome!');
// };
// authorize()

// const LOGIN = 'ADMIN';
// const PASSWORD = '1q2w3e';

// const authorize = () => {
//     let userPassword;
//     let userLogin;
//     let isAuthSuccess = false;
//     let attemptsLeft = 2;
//     let i = 0;
//     do {
//         userLogin = prompt('Логин:');
//             if (!userLogin) {
//                     alert('Введите логин');
//                     continue;
//                 }
            
//         userPassword = prompt('Пароль:'); 
//             if (!userLogin) {
//                     alert('Введите пароль');
//                     continue;
//                 }
//             if (userLogin === LOGIN && userPassword === PASSWORD) {
//                 isAuthSuccess = true;
//                 alert('Welcome!');
//                 } 
//                 else if (attemptsLeft > i) {
//                 alert(`Данные не верны у вас осталось ${attemptsLeft - i} попыток`)
//                     i++
//                 } else { 
//                     alert('Попытки закончились');
//                     break;
//                 }      
//         } while(!isAuthSuccess);
// };
// authorize()

let n =  100;

notSimple:
for (let i = 20; i <= n; i++) {

  for (let j = 2; j < i; j++) { 
    if (i % j == 0) continue notSimple;
  }

  alert( i );
}

// ИТЕРАЦИЯ1
// 1. берём значение переменной і=20;
// 2. проверяем 20 <= 100 (условие выполняется, переходим во внутренний цикл);
// 3. берём значение переменной j=2;
// 4. проверяем 2 < 20 (условие выполняется, переходим к инструкции if)
// 5. выполняем проверку 20 % 2 == 0 это true и мы выполняем команду перехода на следующую 
// итерацию цикла с меткой notSimple: по директиве continue;
// 6. увеличиваем значение переменной і на единицу и теперь і=21;

// ИТЕРАЦИЯ2
// 1. берём значение переменной і=21;
// 2. проверяем 21 <= 100 (условие выполняется, переходим во внутренний цикл);
// 3. берём значение переменной j=2;
// 4. проверяем 2 < 21 (условие выполняется, переходим к инструкции if)
// 5. выполняем проверку 21 % 2 == 0 это false и мы НЕ выполняем команду перехода на следующую 
// итерацию цикла с меткой notSimple: по директиве continue, 

//  (ВОТ МОЙ ВОПРОС - КУДА НАС ВЕДЁТ ИНСТРУКЦИЯ IF ЕСЛИ ЕЁ УСЛОВИЕ false?);

//  далее (ПО МОЕМУ ПРЕДПОЛОЖЕНИЮ) мы остаёмся во внутреннем цикле и увеличиваем значение j на 
//  единицу и теперь j=3;

// 6. берём значение переменной j=3;  
// 7. проверяем 3 < 21 (условие выполняется, переходим к инструкции if);
// 8. выполняем проверку 21 % 3 == 0 это true и мы выполняем команду перехода на следующую 
// итерацию цикла с меткой notSimple: по директиве continue;
// 9. увеличиваем значение переменной і на единицу и теперь і=22;

// ИТЕРАЦИЯ3
// 1. берём значение переменной і=22;
// 2. проверяем 22 <= 100 (условие выполняется, переходим во внутренний цикл);
// 3. берём значение переменной j=2;
// 4. проверяем 2 < 22 (условие выполняется, переходим к инструкции if)
// 5. выполняем проверку 22 % 2 == 0 это true и мы выполняем команду перехода на следующую 
// итерацию цикла с меткой notSimple: по директиве continue;
// 6. увеличиваем значение переменной і на единицу и теперь і=23;

// ИТЕРАЦИЯ4
// 1. берём значение переменной і=23;
// 2. проверяем 23 <= 100 (условие выполняется, переходим во внутренний цикл);
// 3. берём значение переменной j=2;
// 4. проверяем 2 < 23 (условие выполняется, переходим к инструкции if)
// 5. выполняем проверку 23 % 2 == 0 это false и мы НЕ выполняем команду перехода на следующую 
// итерацию цикла с меткой notSimple: по директиве continue, а остаёмся во внутреннем цикле и
// увеличиваем значение j на единицу теперь j=3;
// 6. берём значение переменной j=3;
// 7. проверяем 3 < 23 (условие выполняется, переходим к инструкции if);
// 8. выполняем проверку 23 % 3 == 0 это false и мы НЕ выполняем команду перехода на следующую 
// итерацию цикла с меткой notSimple: по директиве continue, а остаёмся во внутреннем цикле и
// увеличиваем значение j на единицу теперь j=4;

// далее аналогично увеличиваем j до 23 и проводим проверку условия i % j == 0. 
// Bсё время мы будем получать значение false  пока при j=23 условие j < i уже не будет выполняться 
// и внутренний цикл проверки числа 23 на наличие кратных делителей будет завершён,
// а значение переменной i равное 23 будет выведено в консоль.
// 9. увеличиваем значение переменной і на единицу и теперь і=24;

// ИТЕРАЦИЯ5
// КАК ДЛЯ ЧИСЛА 22 И Т.Д.
